<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="C1" xml:space="preserve">
    <value>~/images/connect_btn.png</value>
  </data>
  <data name="C2" xml:space="preserve">
    <value>~/images/devices.png</value>
  </data>
  <data name="C3" xml:space="preserve">
    <value>~/images/website_btn.png</value>
  </data>
  <data name="dd" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="ddd" xml:space="preserve">
    <value>Days</value>
  </data>
  <data name="f1" xml:space="preserve">
    <value>Dear Guest, You can upgrade your Plan anytime during your stay. To avail please click on the</value>
  </data>
  <data name="f2" xml:space="preserve">
    <value>click here</value>
  </data>
  <data name="h1" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="h2" xml:space="preserve">
    <value>Length of stay</value>
  </data>
  <data name="h3" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="m1" xml:space="preserve">
    <value>Choose Your Plan</value>
  </data>
  <data name="m10" xml:space="preserve">
    <value>By clicking Connect to Internet, you agree to the</value>
  </data>
  <data name="m11" xml:space="preserve">
    <value>Terms and Conditions</value>
  </data>
  <data name="m12" xml:space="preserve">
    <value>Connect to Internet</value>
  </data>
  <data name="m2" xml:space="preserve">
    <value>FIRST-TIME USERS</value>
  </data>
  <data name="m3" xml:space="preserve">
    <value>For connect to Internet, please select a price  plan or browse through one of the followin login optins.</value>
  </data>
  <data name="m4" xml:space="preserve">
    <value>Internet Plan </value>
  </data>
  <data name="m5" xml:space="preserve">
    <value>Charge to my Room</value>
  </data>
  <data name="m6" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="m7" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="m8" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="m9" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="p1" xml:space="preserve">
    <value>Dear Guest , Please select a Package</value>
  </data>
  <data name="vv" xml:space="preserve">
    <value />
  </data>
  <data name="z1" xml:space="preserve">
    <value> </value>
  </data>
  <data name="z10" xml:space="preserve">
    <value>As a privileged member you are entitled to a discount off our internet plans.</value>
  </data>
  <data name="z2" xml:space="preserve">
    <value>Complimentary Internet</value>
  </data>
  <data name="z3" xml:space="preserve">
    <value>Premium services: UP to</value>
  </data>
  <data name="z4" xml:space="preserve">
    <value>Standard services: UP to</value>
  </data>
  <data name="z5" xml:space="preserve">
    <value>All above prices are exclusive of taxes</value>
  </data>
  <data name="z6" xml:space="preserve">
    <value>As a privileged member you are entitled to a discount off our internet plans.</value>
  </data>
  <data name="z7" xml:space="preserve">
    <value>Number of days</value>
  </data>
  <data name="z8" xml:space="preserve">
    <value>Premium Service:Enhance speed Internet connection for activities such as video  streaming and multi-media conferencing</value>
  </data>
  <data name="z9" xml:space="preserve">
    <value>Standard Service:Internet connection for activities such as access to email and basic web browsing</value>
  </data>
</root>